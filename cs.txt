@Test//使用这个再封装分页信息
	public void name2() throws JsonProcessingException {
			
		Map<String, Object> bigRows = new HashMap<>();//总共两大行
//		//第一行数据--第一列
//		List<Object> list = new ArrayList<>();
//		Map<String, Object> tr1td1 = new HashMap<>();
//		tr1td1.put("td1", "应用-模块");
//		//第二行数据--第一列
//		Map<String, Object> tr2td1 = new HashMap<>();
//		tr2td1.put("td1", "权限-用户模块");
		
		////循环得到剩下的数据(x,y)x是资源权限,y是角色==先查询出模块的所有资源遍历
		//也要查询出应用的所有角色y
		//=========注意有加一操作
		///一行一行的遍历比较好封装数据 
		List<Object> rows1 = new ArrayList<>();//第一行即tds
		List<Object> rowss = new ArrayList<>();
		for (int y=1; y<4+1 ; y++) {//(m,n)是真正的id,从数据库中取出来的,外层是角色，内层是权限第一行开始
			//循环一行，一行得到数据
			//小行
//			List<Object> row = new ArrayList<>();
			Map<String, Object> row = new HashMap<>();//使用key进行排序
			for (int x = 2; x < 5; x++) {//从第二列开始
				if(y==1) {//第一行的数据,与角色无关的
					Map<String, Object> column = new HashMap<>();
					if(x==2) {//第二列第一行与任何数据无关
						column.put("td2", new RoleResources(0, 0, "角色名称"));
					}else {
						column.put("td2", new RoleResources(x, 0, "读权限"+x));
					}//将每一列添加到行
//					row.add(column);
					row.put("td"+x, column);
				}else {//剩下行的资源与角色
					Map<String, Object> column = new HashMap<>();
					if(x==2) {//第二列数据除了第一行，只与角色相关
						column.put("td2", new RoleResources(0, y, "用户角色"));
					}else {
						column.put("td2", new RoleResources(x, 0, "true"));
					}
//					row.add(column);
					row.put("td"+x, column);
				}
			}//将每一行添加到集合
			if(y==1) {
				rows1.add(row);
			}else {
				rowss.add(row);
			}
		}
		//封装两行数据
		Map<String, Object> th = new HashMap<>();
		th.put("td1", "应用-模块");
		th.put("tds", rows1);
		
		Map<String, Object> tr = new HashMap<>();
		tr.put("td1", "权限-用户模块");
		tr.put("tds", rowss);
		bigRows.put("th", th);
		bigRows.put("tr", tr);
		/////////////////////////////////////////////////
		ObjectMapper objectMapper = new ObjectMapper();
		String string = objectMapper.writeValueAsString(bigRows);
		System.out.println(string);
	}
